var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n \n', 'tags': '', 'url': 'Develop.html'}, {'title': '直播內容', 'text': '\n', 'tags': '', 'url': '直播內容.html'}, {'title': 'w2直播', 'text': '分配工作 \n 影片網址: https://www.youtube.com/watch?v=JXUKf0cfJcc&t=4s \n \n', 'tags': '', 'url': 'w2直播.html'}, {'title': 'w3直播', 'text': '分配工作與了解亂數分組 \n 影片網址: https://www.youtube.com/watch?v=QTfPD5bpeKc&t=3s \n \n \n', 'tags': '', 'url': 'w3直播.html'}, {'title': 'w5直播', 'text': '了解webots \n 影片網址: https://www.youtube.com/watch?v=ElNea4b1dX8&t=4s \n \n', 'tags': '', 'url': 'w5直播.html'}, {'title': 'w6直播', 'text': '安裝OBS及Coppeliasim \n 影片網址: https://www.youtube.com/watch?v=B6jt5OAf424&t=3s \n \n', 'tags': '', 'url': 'w6直播.html'}, {'title': 'W7直播', 'text': '開始線上上課\xa0 \n 影片網址: https://www.youtube.com/watch?v=96y-KSUWDyE \n \n', 'tags': '', 'url': 'W7直播.html'}, {'title': 'W7meet討論', 'text': '影片網址: https://www.youtube.com/watch?v=958HX03aAf8&t=8 \n \n', 'tags': '', 'url': 'W7meet討論.html'}, {'title': 'W9直播', 'text': '分配onshape畫圖 \n 影片網址: https://www.youtube.com/watch?v=opi_PrsUMW4 \n \n', 'tags': '', 'url': 'W9直播.html'}, {'title': 'W10直播', 'text': '影片網址: https://www.youtube.com/watch?v=HauW6F-ez7w&t=3s \n \n \n', 'tags': '', 'url': 'W10直播.html'}, {'title': '每週進度', 'text': '\n', 'tags': '', 'url': '每週進度.html'}, {'title': 'w2', 'text': '更新Python 3.8.2 \n 1.進入\xa0 https://www.python.org/downloads/release/python-382/ \n 2.下載 Windows x86-64 executable installer \n 3.下載完成後開啟，選擇Customize installation選項 \n \n 4.不要勾選pip選項，接著按下next \n \n 5.選擇路徑將python安裝至可攜式系統中的Y槽下 \n 6.接著開啟start_mdecourse.bat批次檔 \n 7.將 start_mdecourse.bat批次檔中的py373改為安裝python 3.8.2版本的資料夾 \n 8.將安裝的版本資料夾取名為py382 \n \n 8.執行stop.bat批次檔後重新啟動start_mdecourse(為了讓檔案重新讀取) \n 9.輸入get-pip.py，開始安裝pip工具 \n 10.安裝cmsimde所需模組 \n \n 11.版本已更新至 \xa0 python 3.8.2 \n \n', 'tags': '', 'url': 'w2.html'}, {'title': 'w3', 'text': '翻譯Coppelia Sim \n 接近傳感器 (Proximity sensors) \n CoppeliaSim 提供了一種非常強大而有效的方法來模擬接近傳感器。用戶可以為幾乎所有類型的接近傳感器建模，從超聲波到紅外等等。允許此功能的場景對像是接近傳感器（與視覺傳感器不同），可以檢測可檢測到的實體。下圖說明了使用接近傳感器的仿真： \n \n 接近傳感器通過 [ 菜單欄 -> 添加 -> 接近傳感器 ] 添加到場景中。 \n 接近傳感器使用的接近傳感器檢測例程也可以通過 Coppelia 幾何例程作為獨立例程使用。 \n \xa0 \n 接近傳感器的類型和操作模式 (Proximity sensor types and mode of operation) \n 接近傳感器有 6 種不同類型，可以在很大程度上進行定制： \n 射線型：射線型接近傳感器非常適合非常簡單的接近傳感器建模或激光測距儀建模。它們是最快的接近傳感器。 \n 隨機射線型：隨機射線型接近傳感器用作隨機掃描圓錐體的射線型傳感器。它的外觀與錐形接近傳感器類似。 \n 金字塔型：金字塔型接近傳感器非常適合對帶有矩形檢測體積的接近傳感器進行簡單建模。他們很快。 \n 圓柱型：圓柱型接近傳感器非常適合對具有旋轉體積的檢測體積的接近傳感器進行簡單建模。他們很快。 \n 圓盤式：圓盤式接近傳感器可對具有旋轉掃描檢測體積的接近傳感器進行精確建模。根據所選的精度和操作模式，它們可能需要更多的計算量。 \n 圓錐型：圓錐型接近傳感器允許對大多數接近傳感器進行最佳，最精確的建模。根據所選的精度和操作模式，它們可能需要更多的計算量。 \n \xa0 \n 接近傳感器以幾何上精確的方式運行：它們在其感測點（小球體）與任何干擾其檢測體積的可檢測實體之間執行精確的距離計算（像大多數傳感器一樣，它們在傳感體積邊緣之間不執行簡單的碰撞檢測其他模擬軟件，但在檢測範圍內進行精確的距離計算）。每個接近傳感器將計算以下最小距離： \n \n 如果接近傳感器檢測到物體，則會激活觸發器，這將導致對觸發器回調函數的調用。 \n 接近傳感器的計算結果可以通過圖形對象記錄。 \n \xa0 \n 視覺傳感器 (Vision sensors) \n 除了接近傳感器之外， CoppeliaSim 還提供另一種傳感器：視覺傳感器。視覺傳感器是可見的對象，其操作方式與攝影機對象非常相似：它們將渲染其視場中的對象，並在指定的閾值被過度拍攝或拍攝不足時觸發檢測。可以檢測可渲染實體的視覺傳感器應主要在顏色，光線或結構在檢測過程中起作用的情況下，在接近傳感器上使用（例如，紅外傳感器，或更籠統地說，對光敏感的傳感器（相機等））。但是，根據運行應用程序的圖形卡或場景對象的複雜程度，視覺傳感器可能會比接近傳感器慢一些。下圖說明了使用視覺傳感器的應用： \n \xa0 \n 確保不要將視覺傳感器與相機混淆。以下是主要區別： \n 視覺傳感器具有固定的分辨率。相機沒有特定的分辨率（即，它會自動調整為視圖尺寸）。 \n 視覺傳感器的圖像內容可通過 API 訪問，圖像處理可通過視覺回調函數進行處理。無法通過 API 直接獲得相機的圖像內容。 \n 視覺傳感器通常比攝像頭需要更多的 CPU 時間並且運行速度較慢。 \n 視覺傳感器只能顯示可渲染的對象。攝像機可以顯示所有對像類型。 \n \xa0 \n 視覺傳感器類型和操作模式 (Vision sensor types and mode of operation) \n 視覺傳感器分為 2 種類型，可以針對不同目的進行調整： \n 正射投影型：正射投影型視覺傳感器的視場為矩形。它們非常適合於近距離紅外傳感器或激光測距儀。 \n 透視投影型：透視投影型視覺傳感器的視場是梯形的。它們非常適合於相機型傳感器。 \n \n 視覺傳感器是可見的對象，可以像相機對像一樣進行瀏覽 [ 彈出菜單 -> 視圖 -> 將視圖與選定的視覺傳感器相關聯 ] 。有關更多詳細信息，另請參見頁面和視圖部分。 \n \xa0 \n 視覺傳感器功能強大，可以以多種靈活方式使用。例如，它們可以用於顯示來自外部應用程序或插件的靜止或運動圖像。插件還可以提供定制的圖像處理算法以及評估算法（例如觸發條件）。視覺回調函數代表了可以進行圖像處理以及可以生成觸發器的機制（可以對觸發器回調函數中的觸發器做出反應）。 \n 視覺傳感器只能渲染（和檢測）可渲染的實體。 \n 力傳感器 (Force sensors) \n 力傳感器最初是兩個形狀之間的剛性鏈接，能夠測量傳遞的力和扭矩。力傳感器的剛性是有條件的，在某種意義上，如果出現某種條件（例如，如果力或扭矩閾值被超過），則力傳感器可能會損壞。 \n \xa0 \n 力傳感器測量三個 3 對值，分別代表沿 x ， y 和 z 軸施加在傳感器上的力以及圍繞 x ， y 和 z 軸施加在傳感器上的扭矩： \n \n 最初，力傳感器充當剛性連接。然而，在模擬過程中，當超過指定的力 / 扭矩閾值或滿足某些其他用戶定義的條件時，力傳感器可能會損壞。下圖說明了力傳感器的損壞狀態： \n \xa0 \n 如果動態啟用了力傳感器，則它只能在仿真期間運行。 有關動態啟用的力傳感器的更多信息，另請參閱有關設計動態仿真的部分。 關節也能夠測量力或扭矩，但是只能沿/繞其z軸測量。 \n 力傳感器通過[菜單欄->添加->力傳感器]添加到場景中。 \n \n 路徑 (Paths) \n 路徑是定義空間中的路徑或軌蹟的對象。它可以用於各種任務，如下圖所示： \n \xa0 \n 可以使用 [ 菜單欄 -> 添加 -> 路徑 ] 將路徑對象添加到場景中。默認情況下，有兩個基本路徑可用：簡單的段類型路徑或圓形類型路徑。它們可以定向或縮放，但是通常這還不夠。用戶可以使用幾種方法來生成定制的路徑對象： \n 從文件導入路徑。 \n 編輯路徑。 \n 從形狀的邊緣生成路徑。有關詳細信息，請參見邊緣編輯模式。 \n 路徑本身並沒有多大作用。它們通常與假人和其他物體結合使用以獲得所需的效果。要沿路徑移動對象，首先需要將虛擬對象分配給路徑，然後可以將對象附著到虛擬對象，該對象將遵循路徑的固有移動。有關更多詳細信息，請參閱關於虛擬變量的部分。 \n 路徑是可渲染的對象，這意味著視覺傳感器可以看到路徑。但是，需要啟用路徑整形功能。可以在對象公共屬性中更改路徑的可渲染屬性。 \n 某些路徑數據可以由圖形對象記錄。 \n \n', 'tags': '', 'url': 'w3.html'}, {'title': 'W3心得', 'text': '雖然一開始根本不知道什麼是CoppeliaSim\xa0 不過在我閱讀完CoppeliaSim後裡面有許多功能讓我非常驚訝，例如可以用來測量與機器人的距離，還有可以被偵測器偵測到的...等，這個電子書裡真的是讓我大開了眼界也讓我了解自己還有許多地方需要加油。 \n \n \n', 'tags': '', 'url': 'W3心得.html'}, {'title': 'w5', 'text': '\n 翻譯webots部分內容 \n \n \n \n 線性馬達 \n 衍生自 Motor 。 \n LinearMotor { \n \xa0 SFString name\xa0\xa0\xa0\xa0 "linear motor"\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 # any string \n \xa0 SFFloat\xa0 maxForce 10\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 # [0, inf) \n \xa0 SFString sound\xa0\xa0\xa0 "sounds/linear_motor.wav"\xa0\xa0 # any string \n 描述 \n 甲 直線電機 節點可以用來驅動一個 SliderJoint 和一個 軌道 。 \n 領域摘要 \n \n 該name字段指定電機設備的名稱標識符。該wb_robot_get_device函數所引用的名稱。默認為"linear motor"。 \n 該maxForce字段同時指定了電動機 可用力的 上限和默認值。該 可力 是可用於執行所請求的動作電動機的動力。它以 牛頓 [N]\xa0表示。該wb_motor_set_available_force功能可用於在運行時更改 可用力 。的值maxForce應始終為零或正（默認值為10 N）。較小的maxForce值可能導致電動機由於其重量或其他外力而無法移動到目標位置。\xa0\xa0 \n \n 發光二極管 \n 源自 設備 和 實體 。 \n LED {\xa0 MFColor color\xa0\xa0 [ 1 0 0 ]\xa0\xa0 # any color\xa0 SFBool\xa0 gradual FALSE\xa0\xa0\xa0\xa0\xa0\xa0 # {TRUE, FALSE}} \n 描述 \n 所述 LED 節點用於發光二極管（LED）進行建模。LED產生的光可用於調試或提供信息。結果顏色僅應用於 LED 節點的第一個子節點。如果第一個子對 像是 “\xa0 形狀 ” 節點，則emissiveColor其“\xa0 材料 ” 或“\xa0 PBRAppearance” 節點的字段會更改。如果第一個孩子是 Light 節點，則其color字段會更改。否則，如果第一個孩子是“\xa0 組 ” 節點，則對該節點執行遞歸搜索，以查找必須修改的顏色字段，因此每個“\xa0 光 ” ，“\xa0 形狀 ” 和“\xa0 組 ” 節點根據以前的規則進行了更改。就 Light 節點而言， LED 節點只能接受 PointLight 和 SpotLight 節點作為子節點。 \n 請注意，將由 LED 功能自動更改的 Material 和 Light 節點不能是 USE 節點。 \n 領域摘要 \n \n color：這定義了LED設備的顏色。熄滅時，LED始終為黑色。但是，當打開時，它可能具有LED編程接口指定的不同顏色。默認情況下，該color定義僅定義一種顏色（紅色），但是您可以更改此顏色並添加可以從LED編程界面中選擇的其他顏色。但是，定義的顏色數量取決於gradual字段的值（請參見下文）。 \n gradual：這定義了LED的類型。如果設置為FALSE，則LED可以採用color列表中定義的任何顏色值。如果設置為TRUE，則color列表應該為空或僅包含一種顏色值。如果color列表為空，則該LED為RGB LED，並且可以採用R8G8B8顏色空間中的任何顏色（1600萬種可能性）。如果color列表包含單一顏色，則LED為單色，並且其強度可以在0（關閉）和255（最大強度）之間進行調整。 \n \n LED功能 \n wb_led_set \n wb_led_get \n CC ++蟒蛇爪哇的MATLABROS \n # include \xa0 <webots/led.h> \xa0 void \xa0 wb_led_set (WbDeviceTag tag, \xa0 int \xa0 value) ; int \xa0 wb_led_get (WbDeviceTag tag) ; \n 描述 \n 打開或關閉 LED 並讀取其狀態 \n 該wb_led_set功能可打開或關閉LED，可能會改變其顏色。如果value參數為0，則LED熄滅。否則，將其打開。 \n 對於非漸變LED（gradual字段設置為FALSE），如果value參數為1，則使用color相應 LED 節點的字段中指定的第一種顏色打開 LED 。如果value參數為2，則使用color在 LED 節點的字段中指定的第二種顏色打開 LED ，依此類推。該value參數不應大於color相應 LED 節點的字段的大小。 \n 對於單色LED（gradual字段設置為TRUE並且color字段僅包含一種顏色），該value參數指示LED的強度在0（關閉）到255（最大強度）的範圍內。 \n 對於RGB LED（gradual字段設置為TRUE並且color字段包含空列表），該value參數指示LED的RGB顏色，範圍為0（關閉或黑色）至0xffffff（白色）。格式為R8G8B8：最高8位（左側）指示紅色電平（介於0x00和0xff之間）。位8至15指示綠色電平，而最低有效8位（右側）指示藍色電平。例如，0xff0000是紅色，0x00ff00是綠色，0x0000ff是藍色，0xffff00是黃色，依此類推。 \n 該wb_led_get函數返回作為最後一個wb_led_set函數調用的參數給出的值。 \n \xa0\xa0\xa0 \n 肌肉 \n Muscle {\xa0 SFDouble volume\xa0\xa0\xa0\xa0\xa0 0.01\xa0\xa0\xa0 # [0, inf)\xa0 SFVec3f\xa0 startOffset 0 0 0\xa0\xa0 # any vector\xa0 SFVec3f\xa0 endOffset\xa0\xa0 0 0 0\xa0\xa0 # any vector\xa0 MFColor\xa0 color\xa0\xa0\xa0\xa0\xa0\xa0 [ ]\xa0\xa0\xa0\xa0 # any color\xa0 SFBool\xa0\xa0 castShadows TRUE\xa0\xa0\xa0 # {TRUE, FALSE}\xa0 SFBool\xa0\xa0 visible\xa0\xa0\xa0\xa0 TRUE\xa0\xa0\xa0 # {TRUE, FALSE}} \n 描述 \n 甲 肌肉 節點可用於以圖形方式顯示的人工肌肉的收縮實現使 關節 和 電機 節點。使用球體表示人造肌肉，其中對稱軸是關節最近的上 變換 節點和endPoint\xa0 實體 節點之間的向量。其他兩個軸具有基於對稱軸長度計算的相同長度，以便在拉伸過程中體積保持恆定。 \n 請注意，如果 Track 節點中包含 Motor 設備，則無法使用 Muscle 節點。 \n 領域摘要 \n \n 該volume字段指定圖形橢球體的恆定體積。當關節移動時，該值用於重新計算肌肉的形狀。 \n 的startOffset肌肉的底部點的位置的最近的坐標系中指定球狀體上 變換 節點。如果startOffset是[0, 0, 0]，則橢球底點對應於最接近的上 變換 原點。 \n 所述endOffset指定肌肉的頂點的位置的坐標系中球狀體 聯合 。endPoint 實體 節點。如果endOffset是[0, 0, 0]，則橢球體的最高點對應於endPoint\xa0 Solid 原點。 \n 該color字段指定三種不同肌肉狀態下球體的顏色：空閒（項目0），收縮（項目1）和放鬆（項目2）。顯示的顏色是通過將閒置顏色和當前狀態顏色與百分比（取決於電動機施加的力）混合而成的： \n \n o\xa0\xa0\xa0 color = idle_color * (1 - percentage) + other_color * percentage \n 在哪裡other_color收縮或放鬆色彩。僅使用三種顏色，因此，如果指定了更多項目，則將忽略它們。如果僅定義了兩種顏色，則當肌肉收縮或鬆弛時，將使用相同的顏色（項目1）。如果僅定義一種顏色，則將指定的顏色用於所有肌肉狀態。如果color字段為空，則所有肌肉狀態均使用默認顏色（純紅色）。 \n \n 該castShadows字段使用戶可以打開（TRUE）或關閉（FALSE）由肌肉球體網格投射的陰影。 \n 該visible字段用於顯示（TRUE）或隱藏（FALSE）3D場景中的肌肉。 \n \n \xa0\xa0 \n 鋼筆 \n 源自 設備 和 實體 。 \n Pen {\xa0 SFColor inkColor\xa0\xa0\xa0 0 0 0\xa0\xa0 # any color\xa0 SFFloat inkDensity\xa0 0.5\xa0\xa0\xa0\xa0 # [0, 1]\xa0 SFFloat leadSize\xa0\xa0\xa0 0.002\xa0\xa0 # [0, inf)\xa0 SFFloat maxDistance 0.0\xa0\xa0\xa0\xa0 # [0, inf)\xa0 SFBool\xa0 write\xa0\xa0\xa0\xa0\xa0\xa0 TRUE\xa0\xa0\xa0 # {TRUE, FALSE}} \n 指數 \n \n 描述 \n 領域摘要 \n 筆功能 \n \n wb_pen_write \n wb_pen_set_ink_color \n \n \n \n 描述 \n Pen 節點對連接到移動機器人的 筆進行 建模，該筆通常用於顯示機器人的軌跡。 Pen 設備的繪製方向與節點的 -y- 軸重合。因此，可以通過修改 實體 節點的旋轉和平移字段來對其進行調整。通過設置該maxDistance字段，可以定義 筆 的範圍並僅在靠近設備的物體上繪畫。例如，使用較小的值maxDistance可以模擬僅在物理接觸時書寫的筆或鉛筆的真實行為。如果maxDistance設置為0（默認值），則範圍將不受限制。 \n 為了可繪製，對象應該由一個 實體 節點組成，該 實體 節點包含一個帶有有效值的 Shape Geometry和一個 ImageTexture 。將已塗漆的圖層應用到紋理上，而無需對其進行修改。 \n 繪製動作的精度主要取決於節點的subdivision場Geometry。較高的subdivision值會增加用於表示幾何圖形的多邊形的數量，因此可以進行更精確的紋理映射，但是也會降低場景的渲染速度。另一方面，如果紋理貼圖較差，則塗漆區域可能會顯示在與預期位置不同的位置。對於 IndexedFaceSet ，可以通過定義紋理映射並設置texCoord和texCoordIndex字段來提高精度。實際上，如果沒有給出紋理映射或給出無效的紋理映射，則係統將使用默認的常規映射。 \n “ pen.wbt”示例環境（位於Webots的“ projects / samples / devices / worlds”目錄中）提供了與配備筆的機器人一起使用的帶紋理的地板的示例。 \n 注意 ： WorldInfo 節點的inkEvaporation字段控制墨水蒸發的速度（消失）。 \n 注意 ：可以通過紅外距離傳感器看到用鋼筆繪製的圖形。因此，可以實現機器人實驗，其中機器人用筆在地板上畫線，第二機器人用第一機器人畫的線進行跟隨行為。 \n 領域摘要 \n \n inkColor：定義筆墨水的顏色。可以使用此wb_pen_set_ink_color功能從pen API更改此字段。 \n inkDensity：定義墨水顏色的密度。該值應在[0,1]範圍內。也可以使用wb_pen_set_ink_color函數從pen API更改此字段。 \n leadSize：定義筆的“筆尖”的寬度。這允許機器人編寫更寬或更窄的軌道。 \n maxDistance：定義 Pen 設備與可繪畫對象之間的最大距離，並允許模擬接觸式書寫行為。小於或等於0的值表示無限的繪畫範圍。 \n write：此佈爾值字段允許機器人啟用或禁用用筆書寫。也可以使用wb_pen_write功能從pen API進行切換。 \n \n \n 筆功能 \n wb_pen_write \n CC ++蟒蛇爪哇的MATLABROS \n # include \xa0 <webots/pen.h> \xa0 void \xa0 wb_pen_write (WbDeviceTag tag, \xa0 bool \xa0 write) ; \n 描述 \n 啟用或禁用筆書寫 \n 該wb_pen_write功能允許用戶打開或關閉筆設備以禁用或啟用書寫。如果該write參數為 true ，則指定的tag設備將寫入；否則為0。如果write為 false ，則不會。 \n wb_pen_set_ink_color \n CC ++蟒蛇爪哇的MATLABROS \n # include \xa0 <webots/pen.h> \xa0 void \xa0 wb_pen_set_ink_color (WbDeviceTag tag, \xa0 int \xa0 color, \xa0 double \xa0 density) ; \n 描述 \n 改變筆墨水的顏色 \n 該wb_pen_set_ink_color功能更改指定tag設備的當前墨水顏色。的color是32位整數值，其限定在為0xRRGGBB十六進制格式（即油墨的新的顏色，0x000000處為黑色，0xFF0000為紅色，0x00FF00為綠色，0x0000FF是藍色的，0xFFA500是橙色，0x808080是灰色0XFFFFFF是白色的，等等。）。該density參數定義墨水密度，0表示透明墨水，1表示完全不透明的墨水。 \n 例 \n wb_pen_set_ink_color(pen, 0xF01010 , 0.9 ); \n 上面的陳述會將指示筆的墨水顏色更改為某种红色。 \n 注意 \xa0[MATLAB]：在wb_pen_set_ink_color函數的MATLAB版本中，color參數必須是包含三個RGB分量的向量[RED GREEN BLUE]。每個組件的值必須在0.0到1.0之間。例如，矢量[1 0 1]代表洋紅色。 \n \n', 'tags': '', 'url': 'w5.html'}, {'title': 'W5心得', 'text': '翻譯的東西越多 越覺得webots這個軟體鰻厲害的 以及了解到還有很多東西是我不懂的\xa0 希望在接下來的日子 我可以學會更多裡面的內容以及提升自我的英文程度到可以不用在使用google翻譯。 \n \n', 'tags': '', 'url': 'W5心得.html'}, {'title': 'W6', 'text': '1.完成分配到的webots tutorial工作內容 \n 2.學習使用obs拍攝影片和學習coppeliasim \n \n 3.安裝pyslvs \n \n', 'tags': '', 'url': 'W6.html'}, {'title': 'W6心得', 'text': '下周即將開始使用線上課程 所以學會了meet 和 obs\xa0 兩個都是我之前沒有接觸過的軟體\xa0  感覺很新鮮 也學得蠻辛苦。 \n \n', 'tags': '', 'url': 'W6心得.html'}, {'title': 'W7', 'text': '1.正式開始線上課程 \n 2.學習使用obs配合youtube \n \n 3.學習pyson語法 方便在coppeliasimeliasim上使用 \n \n \n', 'tags': '', 'url': 'W7.html'}, {'title': 'W7心得', 'text': '開始線上上課了 obs還不是很會使用 pyson語法也好難 不過我會加油的 希望在之後的哪一天 可以把他們都學會。 \n \n', 'tags': '', 'url': 'W7心得.html'}, {'title': 'W8', 'text': '段考周\xa0 使用obs拍攝影片 \n 影片網址:\xa0 https://www.youtube.com/watch?v=AM4ipUDx024 \n \n', 'tags': '', 'url': 'W8.html'}, {'title': 'W8心得', 'text': '學期已經過一半了 雖然學習的成果不是很好 不過都有繼續努力\xa0 接下來也會持續加油的 盡量不要給組員們造成壓力。', 'tags': '', 'url': 'W8心得.html'}]};