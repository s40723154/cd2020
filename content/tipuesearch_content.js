var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n \n', 'tags': '', 'url': 'Develop.html'}, {'title': '每週進度', 'text': '', 'tags': '', 'url': '每週進度.html'}, {'title': 'w3', 'text': '翻譯Coppelia Sim \n 接近傳感器 (Proximity sensors) \n CoppeliaSim 提供了一種非常強大而有效的方法來模擬接近傳感器。用戶可以為幾乎所有類型的接近傳感器建模，從超聲波到紅外等等。允許此功能的場景對像是接近傳感器（與視覺傳感器不同），可以檢測可檢測到的實體。下圖說明了使用接近傳感器的仿真： \n \n 接近傳感器通過 [ 菜單欄 -> 添加 -> 接近傳感器 ] 添加到場景中。 \n 接近傳感器使用的接近傳感器檢測例程也可以通過 Coppelia 幾何例程作為獨立例程使用。 \n \xa0 \n 接近傳感器的類型和操作模式 (Proximity sensor types and mode of operation) \n 接近傳感器有 6 種不同類型，可以在很大程度上進行定制： \n 射線型：射線型接近傳感器非常適合非常簡單的接近傳感器建模或激光測距儀建模。它們是最快的接近傳感器。 \n 隨機射線型：隨機射線型接近傳感器用作隨機掃描圓錐體的射線型傳感器。它的外觀與錐形接近傳感器類似。 \n 金字塔型：金字塔型接近傳感器非常適合對帶有矩形檢測體積的接近傳感器進行簡單建模。他們很快。 \n 圓柱型：圓柱型接近傳感器非常適合對具有旋轉體積的檢測體積的接近傳感器進行簡單建模。他們很快。 \n 圓盤式：圓盤式接近傳感器可對具有旋轉掃描檢測體積的接近傳感器進行精確建模。根據所選的精度和操作模式，它們可能需要更多的計算量。 \n 圓錐型：圓錐型接近傳感器允許對大多數接近傳感器進行最佳，最精確的建模。根據所選的精度和操作模式，它們可能需要更多的計算量。 \n \xa0 \n 接近傳感器以幾何上精確的方式運行：它們在其感測點（小球體）與任何干擾其檢測體積的可檢測實體之間執行精確的距離計算（像大多數傳感器一樣，它們在傳感體積邊緣之間不執行簡單的碰撞檢測其他模擬軟件，但在檢測範圍內進行精確的距離計算）。每個接近傳感器將計算以下最小距離： \n \n 如果接近傳感器檢測到物體，則會激活觸發器，這將導致對觸發器回調函數的調用。 \n 接近傳感器的計算結果可以通過圖形對象記錄。 \n \xa0 \n 視覺傳感器 (Vision sensors) \n 除了接近傳感器之外， CoppeliaSim 還提供另一種傳感器：視覺傳感器。視覺傳感器是可見的對象，其操作方式與攝影機對象非常相似：它們將渲染其視場中的對象，並在指定的閾值被過度拍攝或拍攝不足時觸發檢測。可以檢測可渲染實體的視覺傳感器應主要在顏色，光線或結構在檢測過程中起作用的情況下，在接近傳感器上使用（例如，紅外傳感器，或更籠統地說，對光敏感的傳感器（相機等））。但是，根據運行應用程序的圖形卡或場景對象的複雜程度，視覺傳感器可能會比接近傳感器慢一些。下圖說明了使用視覺傳感器的應用： \n \xa0 \n 確保不要將視覺傳感器與相機混淆。以下是主要區別： \n 視覺傳感器具有固定的分辨率。相機沒有特定的分辨率（即，它會自動調整為視圖尺寸）。 \n 視覺傳感器的圖像內容可通過 API 訪問，圖像處理可通過視覺回調函數進行處理。無法通過 API 直接獲得相機的圖像內容。 \n 視覺傳感器通常比攝像頭需要更多的 CPU 時間並且運行速度較慢。 \n 視覺傳感器只能顯示可渲染的對象。攝像機可以顯示所有對像類型。 \n \xa0 \n 視覺傳感器類型和操作模式 (Vision sensor types and mode of operation) \n 視覺傳感器分為 2 種類型，可以針對不同目的進行調整： \n 正射投影型：正射投影型視覺傳感器的視場為矩形。它們非常適合於近距離紅外傳感器或激光測距儀。 \n 透視投影型：透視投影型視覺傳感器的視場是梯形的。它們非常適合於相機型傳感器。 \n \n 視覺傳感器是可見的對象，可以像相機對像一樣進行瀏覽 [ 彈出菜單 -> 視圖 -> 將視圖與選定的視覺傳感器相關聯 ] 。有關更多詳細信息，另請參見頁面和視圖部分。 \n \xa0 \n 視覺傳感器功能強大，可以以多種靈活方式使用。例如，它們可以用於顯示來自外部應用程序或插件的靜止或運動圖像。插件還可以提供定制的圖像處理算法以及評估算法（例如觸發條件）。視覺回調函數代表了可以進行圖像處理以及可以生成觸發器的機制（可以對觸發器回調函數中的觸發器做出反應）。 \n 視覺傳感器只能渲染（和檢測）可渲染的實體。 \n 力傳感器 (Force sensors) \n 力傳感器最初是兩個形狀之間的剛性鏈接，能夠測量傳遞的力和扭矩。力傳感器的剛性是有條件的，在某種意義上，如果出現某種條件（例如，如果力或扭矩閾值被超過），則力傳感器可能會損壞。 \n \xa0 \n 力傳感器測量三個 3 對值，分別代表沿 x ， y 和 z 軸施加在傳感器上的力以及圍繞 x ， y 和 z 軸施加在傳感器上的扭矩： \n \n 最初，力傳感器充當剛性連接。然而，在模擬過程中，當超過指定的力 / 扭矩閾值或滿足某些其他用戶定義的條件時，力傳感器可能會損壞。下圖說明了力傳感器的損壞狀態： \n \xa0 \n 如果動態啟用了力傳感器，則它只能在仿真期間運行。 有關動態啟用的力傳感器的更多信息，另請參閱有關設計動態仿真的部分。 關節也能夠測量力或扭矩，但是只能沿/繞其z軸測量。 \n 力傳感器通過[菜單欄->添加->力傳感器]添加到場景中。 \n \n 路徑 (Paths) \n 路徑是定義空間中的路徑或軌蹟的對象。它可以用於各種任務，如下圖所示： \n \xa0 \n 可以使用 [ 菜單欄 -> 添加 -> 路徑 ] 將路徑對象添加到場景中。默認情況下，有兩個基本路徑可用：簡單的段類型路徑或圓形類型路徑。它們可以定向或縮放，但是通常這還不夠。用戶可以使用幾種方法來生成定制的路徑對象： \n 從文件導入路徑。 \n 編輯路徑。 \n 從形狀的邊緣生成路徑。有關詳細信息，請參見邊緣編輯模式。 \n 路徑本身並沒有多大作用。它們通常與假人和其他物體結合使用以獲得所需的效果。要沿路徑移動對象，首先需要將虛擬對象分配給路徑，然後可以將對象附著到虛擬對象，該對象將遵循路徑的固有移動。有關更多詳細信息，請參閱關於虛擬變量的部分。 \n 路徑是可渲染的對象，這意味著視覺傳感器可以看到路徑。但是，需要啟用路徑整形功能。可以在對象公共屬性中更改路徑的可渲染屬性。 \n 某些路徑數據可以由圖形對象記錄。 \n \n 心得 \n 雖然一開始根本不知道什麼是CoppeliaSim\xa0 不過在我閱讀完CoppeliaSim後裡面有許多功能讓我非常驚訝，例如可以用來測量與機器人的距離，還有可以被偵測器偵測到的...等，這個電子書裡真的是讓我大開了眼界也讓我了解自己還有許多地方需要加油。', 'tags': '', 'url': 'w3.html'}]};