<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<p></p>
<h1><strong>直播內容</strong></h1>
<p><strong></strong></p>
<h2><strong>w2直播</strong></h2>
<p><strong>分配工作</strong></p>
<p><strong>影片網址:<a href="https://www.youtube.com/watch?v=JXUKf0cfJcc&amp;t=4s">https://www.youtube.com/watch?v=JXUKf0cfJcc&amp;t=4s</a></strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/JXUKf0cfJcc" width="560"></iframe></strong></p>
<h2><strong>w3直播</strong></h2>
<p><strong>分配工作與了解亂數分組</strong></p>
<p><strong>影片網址:<a href="https://www.youtube.com/watch?v=QTfPD5bpeKc&amp;t=3s">https://www.youtube.com/watch?v=QTfPD5bpeKc&amp;t=3s</a></strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/QTfPD5bpeKc" width="560"></iframe></strong></p>
<p><strong></strong></p>
<h2><strong>w5直播</strong></h2>
<p><strong>了解webots</strong></p>
<p><strong>影片網址:<a href="https://www.youtube.com/watch?v=ElNea4b1dX8&amp;t=4s">https://www.youtube.com/watch?v=ElNea4b1dX8&amp;t=4s</a></strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ElNea4b1dX8" width="560"></iframe></strong></p>
<h2><strong>w6直播</strong></h2>
<p><strong>安裝OBS及Coppeliasim</strong></p>
<p><strong>影片網址:<a href="https://www.youtube.com/watch?v=B6jt5OAf424&amp;t=3s">https://www.youtube.com/watch?v=B6jt5OAf424&amp;t=3s</a></strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/B6jt5OAf424" width="560"></iframe></strong></p>
<p></p>
<h1>每週進度</h1>
<p></p>
<h2>w2</h2>
<p>更新Python 3.8.2</p>
<p>1.進入 <a href="https://www.python.org/downloads/release/python-382/">https://www.python.org/downloads/release/python-382/</a></p>
<p>2.下載<a href="https://s40723114.github.io/get_page/python%20%E6%9B%B4%E6%96%B0%E8%87%B33.8.2/Windows%20x86-64%20executable%20installer">Windows x86-64 executable installer</a></p>
<p>3.下載完成後開啟，選擇Customize installation選項</p>
<p><img alt="" height="333" src="https://s40723114.github.io/cd2020/images/1.PNG" width="542"/></p>
<p>4.不要勾選pip選項，接著按下next</p>
<p><img alt="" height="312" src="https://s40723114.github.io/cd2020/images/3.PNG" width="504"/></p>
<p>5.選擇路徑將python安裝至可攜式系統中的Y槽下</p>
<p>6.接著開啟start_mdecourse.bat批次檔</p>
<p>7.將<span>start_mdecourse.bat批次檔中的py373改為安裝python 3.8.2版本的資料夾</span></p>
<p><span>8.將安裝的版本資料夾取名為py382</span></p>
<p><img alt="" height="673" src="https://s40723114.github.io/cd2020/images/2.PNG" width="1098"/></p>
<p>8.執行stop.bat批次檔後重新啟動start_mdecourse(為了讓檔案重新讀取)<br/><br/></p>
<p>9.輸入get-pip.py，開始安裝pip工具</p>
<p>10.安裝cmsimde所需模組</p>
<p><img alt="" height="20" src="https://s40723114.github.io/cd2020/images/4.PNG" width="536"/></p>
<p>11.版本已更新至<span> </span><span>python 3.8.2</span></p>
<p><span><img alt="" height="69" src="https://s40723114.github.io/cd2020/images/6.PNG" width="755"/></span></p>
<h2>w3</h2>
<p><em><strong>翻譯Coppelia Sim</strong></em></p>
<p>接近傳感器<span>(Proximity sensors)</span></p>
<p><span>CoppeliaSim</span>提供了一種非常強大而有效的方法來模擬接近傳感器。用戶可以為幾乎所有類型的接近傳感器建模，從超聲波到紅外等等。允許此功能的場景對像是接近傳感器（與視覺傳感器不同），可以檢測可檢測到的實體。下圖說明了使用接近傳感器的仿真：</p>
<p><img alt="" height="228" src="https://s40723114.github.io/cd2020-ag1/images/%E5%82%B3%E6%84%9F%E5%99%A81.jpg" width="600"/></p>
<p>接近傳感器通過<span>[</span>菜單欄<span>-&gt;</span>添加<span>-&gt;</span>接近傳感器<span>]</span>添加到場景中。</p>
<p>接近傳感器使用的接近傳感器檢測例程也可以通過<span>Coppelia</span>幾何例程作為獨立例程使用。</p>
<p><span> </span></p>
<p>接近傳感器的類型和操作模式<span>(Proximity sensor types and mode of operation)</span></p>
<p>接近傳感器有<span>6</span>種不同類型，可以在很大程度上進行定制：</p>
<p>射線型：射線型接近傳感器非常適合非常簡單的接近傳感器建模或激光測距儀建模。它們是最快的接近傳感器。</p>
<p>隨機射線型：隨機射線型接近傳感器用作隨機掃描圓錐體的射線型傳感器。它的外觀與錐形接近傳感器類似。</p>
<p>金字塔型：金字塔型接近傳感器非常適合對帶有矩形檢測體積的接近傳感器進行簡單建模。他們很快。</p>
<p>圓柱型：圓柱型接近傳感器非常適合對具有旋轉體積的檢測體積的接近傳感器進行簡單建模。他們很快。</p>
<p>圓盤式：圓盤式接近傳感器可對具有旋轉掃描檢測體積的接近傳感器進行精確建模。根據所選的精度和操作模式，它們可能需要更多的計算量。</p>
<p>圓錐型：圓錐型接近傳感器允許對大多數接近傳感器進行最佳，最精確的建模。根據所選的精度和操作模式，它們可能需要更多的計算量。</p>
<p><span> <img alt="" height="141" src="https://s40723114.github.io/cd2020-ag1/images/%E5%82%B3%E6%84%9F%E5%99%A82.jpg" width="631"/></span></p>
<p>接近傳感器以幾何上精確的方式運行：它們在其感測點（小球體）與任何干擾其檢測體積的可檢測實體之間執行精確的距離計算（像大多數傳感器一樣，它們在傳感體積邊緣之間不執行簡單的碰撞檢測其他模擬軟件，但在檢測範圍內進行精確的距離計算）。每個接近傳感器將計算以下最小距離：</p>
<p><img alt="" height="210" src="https://s40723114.github.io/cd2020-ag1/images/%E5%82%B3%E6%84%9F%E5%99%A83.jpg" width="612"/></p>
<p>如果接近傳感器檢測到物體，則會激活觸發器，這將導致對觸發器回調函數的調用。</p>
<p>接近傳感器的計算結果可以通過圖形對象記錄。</p>
<p><span> </span></p>
<p>視覺傳感器<span>(Vision sensors)</span></p>
<p>除了接近傳感器之外，<span>CoppeliaSim</span>還提供另一種傳感器：視覺傳感器。視覺傳感器是可見的對象，其操作方式與攝影機對象非常相似：它們將渲染其視場中的對象，並在指定的閾值被過度拍攝或拍攝不足時觸發檢測。可以檢測可渲染實體的視覺傳感器應主要在顏色，光線或結構在檢測過程中起作用的情況下，在接近傳感器上使用（例如，紅外傳感器，或更籠統地說，對光敏感的傳感器（相機等））。但是，根據運行應用程序的圖形卡或場景對象的複雜程度，視覺傳感器可能會比接近傳感器慢一些。下圖說明了使用視覺傳感器的應用：</p>
<p><span> <img alt="" height="179" src="https://s40723114.github.io/cd2020-ag1/images/%E8%A6%96%E8%A6%BA1.jpg" width="600"/></span></p>
<p>確保不要將視覺傳感器與相機混淆。以下是主要區別：</p>
<p>視覺傳感器具有固定的分辨率。相機沒有特定的分辨率（即，它會自動調整為視圖尺寸）。</p>
<p>視覺傳感器的圖像內容可通過<span>API</span>訪問，圖像處理可通過視覺回調函數進行處理。無法通過<span>API</span>直接獲得相機的圖像內容。</p>
<p>視覺傳感器通常比攝像頭需要更多的<span>CPU</span>時間並且運行速度較慢。</p>
<p>視覺傳感器只能顯示可渲染的對象。攝像機可以顯示所有對像類型。</p>
<p><span> </span></p>
<p>視覺傳感器類型和操作模式<span>(Vision sensor types and mode of operation)</span></p>
<p>視覺傳感器分為<span>2</span>種類型，可以針對不同目的進行調整：</p>
<p>正射投影型：正射投影型視覺傳感器的視場為矩形。它們非常適合於近距離紅外傳感器或激光測距儀。</p>
<p>透視投影型：透視投影型視覺傳感器的視場是梯形的。它們非常適合於相機型傳感器。</p>
<p><img alt="" height="176" src="https://s40723114.github.io/cd2020-ag1/images/%E8%A6%96%E8%A6%BA2.jpg" width="393"/></p>
<p>視覺傳感器是可見的對象，可以像相機對像一樣進行瀏覽<span>[</span>彈出菜單<span>-&gt;</span>視圖<span>-&gt;</span>將視圖與選定的視覺傳感器相關聯<span>]</span>。有關更多詳細信息，另請參見頁面和視圖部分。</p>
<p><span> <img alt="" height="311" src="https://s40723114.github.io/cd2020-ag1/images/%E8%A6%96%E8%A6%BA3.jpg" width="487"/></span></p>
<p>視覺傳感器功能強大，可以以多種靈活方式使用。例如，它們可以用於顯示來自外部應用程序或插件的靜止或運動圖像。插件還可以提供定制的圖像處理算法以及評估算法（例如觸發條件）。視覺回調函數代表了可以進行圖像處理以及可以生成觸發器的機制（可以對觸發器回調函數中的觸發器做出反應）。</p>
<p>視覺傳感器只能渲染（和檢測）可渲染的實體。</p>
<p>力傳感器<span>(Force sensors)</span></p>
<p>力傳感器最初是兩個形狀之間的剛性鏈接，能夠測量傳遞的力和扭矩。力傳感器的剛性是有條件的，在某種意義上，如果出現某種條件（例如，如果力或扭矩閾值被超過），則力傳感器可能會損壞。</p>
<p><span> <img alt="" height="252" src="https://s40723114.github.io/cd2020-ag1/images/%E5%8A%9B1.jpg" width="477"/></span></p>
<p>力傳感器測量三個<span>3</span>對值，分別代表沿<span>x</span>，<span>y</span>和<span>z</span>軸施加在傳感器上的力以及圍繞<span>x</span>，<span>y</span>和<span>z</span>軸施加在傳感器上的扭矩：</p>
<p><img alt="" height="194" src="https://s40723114.github.io/cd2020-ag1/images/%E5%8A%9B2.jpg" width="267"/></p>
<p>最初，力傳感器充當剛性連接。然而，在模擬過程中，當超過指定的力<span>/</span>扭矩閾值或滿足某些其他用戶定義的條件時，力傳感器可能會損壞。下圖說明了力傳感器的損壞狀態：</p>
<p><span> <img alt="" height="222" src="https://s40723114.github.io/cd2020-ag1/images/%E5%8A%9B3.jpg" width="478"/></span></p>
<p>如果動態啟用了力傳感器，則它只能在仿真期間運行。 有關動態啟用的力傳感器的更多信息，另請參閱有關設計動態仿真的部分。 關節也能夠測量力或扭矩，但是只能沿/繞其z軸測量。</p>
<p>力傳感器通過[菜單欄-&gt;添加-&gt;力傳感器]添加到場景中。</p>
<p></p>
<p>路徑<span>(Paths)</span></p>
<p>路徑是定義空間中的路徑或軌蹟的對象。它可以用於各種任務，如下圖所示：</p>
<p><span> <img alt="" height="328" src="https://s40723114.github.io/cd2020-ag1/images/%E8%B7%AF%E5%BE%911.jpg" width="600"/></span></p>
<p>可以使用<span>[</span>菜單欄<span>-&gt;</span>添加<span>-&gt;</span>路徑<span>]</span>將路徑對象添加到場景中。默認情況下，有兩個基本路徑可用：簡單的段類型路徑或圓形類型路徑。它們可以定向或縮放，但是通常這還不夠。用戶可以使用幾種方法來生成定制的路徑對象：</p>
<p>從文件導入路徑。</p>
<p>編輯路徑。</p>
<p>從形狀的邊緣生成路徑。有關詳細信息，請參見邊緣編輯模式。</p>
<p>路徑本身並沒有多大作用。它們通常與假人和其他物體結合使用以獲得所需的效果。要沿路徑移動對象，首先需要將虛擬對象分配給路徑，然後可以將對象附著到虛擬對象，該對象將遵循路徑的固有移動。有關更多詳細信息，請參閱關於虛擬變量的部分。</p>
<p>路徑是可渲染的對象，這意味著視覺傳感器可以看到路徑。但是，需要啟用路徑整形功能。可以在對象公共屬性中更改路徑的可渲染屬性。</p>
<p>某些路徑數據可以由圖形對象記錄。</p>
<p></p>
<h3><em><strong>W3心得</strong></em></h3>
<p>雖然一開始根本不知道什麼是CoppeliaSim  不過在我閱讀完CoppeliaSim後裡面有許多功能讓我非常驚訝，例如可以用來測量與機器人的距離，還有可以被偵測器偵測到的...等，這個電子書裡真的是讓我大開了眼界也讓我了解自己還有許多地方需要加油。</p>
<p></p>
<p></p>
<h2>w5</h2>
<p></p>
<p>翻譯webots部分內容</p>
<p></p>
<p><img alt="" height="369" src="/images/圖1.png" width="457"/></p>
<p></p>
<p>線性馬達</p>
<p>衍生自<a href="https://cyberbotics.com/doc/reference/motor">Motor</a>。</p>
<p>LinearMotor {</p>
<p>  SFString name     "linear motor"              # any string</p>
<p>  SFFloat  maxForce 10                          # [0, inf)</p>
<p>  SFString sound    "sounds/linear_motor.wav"   # any string</p>
<p>描述</p>
<p>甲<a href="https://cyberbotics.com/doc/reference/linearmotor#linearmotor"><span>直線電機</span></a>節點可以用來驅動一個<a href="https://cyberbotics.com/doc/reference/sliderjoint">SliderJoint</a>和一個<a href="https://cyberbotics.com/doc/reference/track"><span>軌道</span></a>。</p>
<p>領域摘要</p>
<ul>
<li>該name字段指定電機設備的名稱標識符。該wb_robot_get_device函數所引用的名稱。默認為"linear motor"。</li>
<li>該maxForce字段同時指定了電動機<em>可用力的</em>上限和默認值。該<em>可力</em>是可用於執行所請求的動作電動機的動力。它以<em>牛頓</em>[N] 表示。該wb_motor_set_available_force功能可用於在運行時更改<em>可用力</em>。的值maxForce應始終為零或正（默認值為10 N）。較小的maxForce值可能導致電動機由於其重量或其他外力而無法移動到目標位置。  </li>
</ul>
<p><em><strong>發光二極管</strong></em></p>
<p>源自<a href="https://cyberbotics.com/doc/reference/device"><span>設備</span></a>和<a href="https://cyberbotics.com/doc/reference/solid"><span>實體</span></a>。</p>
<p>LED {  MFColor color   [ 1 0 0 ]   # any color  SFBool  gradual FALSE       # {TRUE, FALSE}}</p>
<p><em><strong>描述</strong></em></p>
<p>所述<a href="https://cyberbotics.com/doc/reference/led#led">LED</a>節點用於發光二極管（LED）進行建模。LED產生的光可用於調試或提供信息。結果顏色僅應用於<a href="https://cyberbotics.com/doc/reference/led#led">LED</a>節點的第一個子節點。如果第一個子對<a href="https://cyberbotics.com/doc/reference/pbrappearance"><span>像是</span>“ </a><a href="https://cyberbotics.com/doc/reference/shape"><span>形狀</span>”</a>節點，則emissiveColor其“ <a href="https://cyberbotics.com/doc/reference/material"><span>材料</span>”</a>或“ <a href="https://cyberbotics.com/doc/reference/pbrappearance">PBRAppearance”</a>節點的字段會更改。如果第一個孩子是<a href="https://cyberbotics.com/doc/reference/light">Light</a>節點，則其color字段會更改。否則，如果第一個孩子是“ <a href="https://cyberbotics.com/doc/reference/group"><span>組</span>”</a>節點，則對該節點執行遞歸搜索，以查找必須修改的顏色字段，因此每個“ <a href="https://cyberbotics.com/doc/reference/light"><span>光</span>”</a>，“ <a href="https://cyberbotics.com/doc/reference/shape"><span>形狀</span>”</a>和“ <a href="https://cyberbotics.com/doc/reference/group"><span>組</span>”</a>節點根據以前的規則進行了更改。就<a href="https://cyberbotics.com/doc/reference/light">Light</a>節點而言，<a href="https://cyberbotics.com/doc/reference/led#led">LED</a>節點只能接受<a href="https://cyberbotics.com/doc/reference/pointlight">PointLight</a>和<a href="https://cyberbotics.com/doc/reference/spotlight">SpotLight</a>節點作為子節點。</p>
<p>請注意，將由<a href="https://cyberbotics.com/doc/reference/led#led">LED</a>功能自動更改的<a href="https://cyberbotics.com/doc/reference/material">Material</a>和<a href="https://cyberbotics.com/doc/reference/light">Light</a>節點不能是<a href="https://cyberbotics.com/doc/reference/def-and-use">USE</a>節點。</p>
<p><em><strong>領域摘要</strong></em></p>
<ul>
<li>color：這定義了LED設備的顏色。熄滅時，LED始終為黑色。但是，當打開時，它可能具有LED編程接口指定的不同顏色。默認情況下，該color定義僅定義一種顏色（紅色），但是您可以更改此顏色並添加可以從LED編程界面中選擇的其他顏色。但是，定義的顏色數量取決於gradual字段的值（請參見下文）。</li>
<li>gradual：這定義了LED的類型。如果設置為FALSE，則LED可以採用color列表中定義的任何顏色值。如果設置為TRUE，則color列表應該為空或僅包含一種顏色值。如果color列表為空，則該LED為RGB LED，並且可以採用R8G8B8顏色空間中的任何顏色（1600萬種可能性）。如果color列表包含單一顏色，則LED為單色，並且其強度可以在0（關閉）和255（最大強度）之間進行調整。</li>
</ul>
<p><strong>LED功能</strong></p>
<p><strong>wb_led_set</strong></p>
<p><strong>wb_led_get</strong></p>
<p>CC ++蟒蛇爪哇的MATLABROS</p>
<p><span><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;">#</span><span><span style="font-style: inherit; font-weight: inherit;"><strong><span style="font-style: inherit;">include</span></strong></span></span></span><span><span> </span><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;">&lt;webots/led.h&gt;</span></span></span></span></span> <span><span style="font-style: inherit;"><strong><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit;">void</span></span></span></strong></span></span><span style="font-style: inherit; font-weight: inherit;"><span> </span><strong><span style="font-style: inherit;"><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit;">wb_led_set</span></span></span></strong></span><span style="font-style: inherit; font-weight: inherit;"><span><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;">(WbDeviceTag tag,<span> </span></span></span></span><span style="font-style: inherit;"><span><span style="font-style: inherit; font-weight: inherit;"><strong><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit;">int</span></span></strong></span></span></span><span><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;"><span> </span>value)</span></span></span></span>;<span><span style="font-style: inherit;"><strong><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit;">int</span></span></span></strong></span></span><span style="font-style: inherit; font-weight: inherit;"><span> </span><strong><span style="font-style: inherit;"><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit;">wb_led_get</span></span></span></strong></span><span style="font-style: inherit; font-weight: inherit;"><span><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;">(WbDeviceTag tag)</span></span></span></span>;</p>
<p><strong>描述</strong></p>
<p><em>打開或關閉</em><em>LED</em><em>並讀取其狀態</em></p>
<p>該wb_led_set功能可打開或關閉LED，可能會改變其顏色。如果value參數為0，則LED熄滅。否則，將其打開。</p>
<p>對於非漸變LED（gradual字段設置為FALSE），如果value參數為1，則使用color相應<a href="https://cyberbotics.com/doc/reference/led#led">LED</a>節點的字段中指定的第一種顏色打開<a href="https://cyberbotics.com/doc/reference/led#led">LED</a>。如果value參數為2，則使用color在<a href="https://cyberbotics.com/doc/reference/led#led">LED</a>節點的字段中指定的第二種顏色打開<a href="https://cyberbotics.com/doc/reference/led#led">LED</a>，依此類推。該value參數不應大於color相應<a href="https://cyberbotics.com/doc/reference/led#led">LED</a>節點的字段的大小。</p>
<p>對於單色LED（gradual字段設置為TRUE並且color字段僅包含一種顏色），該value參數指示LED的強度在0（關閉）到255（最大強度）的範圍內。</p>
<p>對於RGB LED（gradual字段設置為TRUE並且color字段包含空列表），該value參數指示LED的RGB顏色，範圍為0（關閉或黑色）至0xffffff（白色）。格式為R8G8B8：最高8位（左側）指示紅色電平（介於0x00和0xff之間）。位8至15指示綠色電平，而最低有效8位（右側）指示藍色電平。例如，0xff0000是紅色，0x00ff00是綠色，0x0000ff是藍色，0xffff00是黃色，依此類推。</p>
<p>該wb_led_get函數返回作為最後一個wb_led_set函數調用的參數給出的值。</p>
<p>   </p>
<p><em><strong>肌肉</strong></em></p>
<p>Muscle {  SFDouble volume      0.01    # [0, inf)  SFVec3f  startOffset 0 0 0   # any vector  SFVec3f  endOffset   0 0 0   # any vector  MFColor  color       [ ]     # any color  SFBool   castShadows TRUE    # {TRUE, FALSE}  SFBool   visible     TRUE    # {TRUE, FALSE}}</p>
<p><em><strong>描述</strong></em></p>
<p>甲<a href="https://cyberbotics.com/doc/reference/muscle#muscle"><span>肌肉</span></a>節點可用於以圖形方式顯示的人工肌肉的收縮實現使<a href="https://cyberbotics.com/doc/reference/joint"><span>關節</span></a>和<a href="https://cyberbotics.com/doc/reference/motor"><span>電機</span></a>節點。使用球體表示人造肌肉，其中對稱軸是關節最近的上<a href="https://cyberbotics.com/doc/reference/transform"><span>變換</span></a>節點和endPoint <a href="https://cyberbotics.com/doc/reference/solid"><span>實體</span></a>節點之間的向量。其他兩個軸具有基於對稱軸長度計算的相同長度，以便在拉伸過程中體積保持恆定。</p>
<p>請注意，如果<a href="https://cyberbotics.com/doc/reference/track">Track</a>節點中包含<a href="https://cyberbotics.com/doc/reference/motor">Motor</a>設備，則無法使用<a href="https://cyberbotics.com/doc/reference/muscle#muscle">Muscle</a>節點。</p>
<p><em><strong>領域摘要</strong></em></p>
<ul>
<li>該volume字段指定圖形橢球體的恆定體積。當關節移動時，該值用於重新計算肌肉的形狀。</li>
<li>的startOffset肌肉的底部點的位置的最近的坐標系中指定球狀體上<a href="https://cyberbotics.com/doc/reference/transform"><span>變換</span></a>節點。如果startOffset是[0, 0, 0]，則橢球底點對應於最接近的上<a href="https://cyberbotics.com/doc/reference/transform"><span>變換</span></a>原點。</li>
<li>所述endOffset指定肌肉的頂點的位置的坐標系中球狀體<a href="https://cyberbotics.com/doc/reference/joint"><span>聯合</span></a>。endPoint<a href="https://cyberbotics.com/doc/reference/solid"><span>實體</span></a>節點。如果endOffset是[0, 0, 0]，則橢球體的最高點對應於endPoint <a href="https://cyberbotics.com/doc/reference/solid">Solid</a>原點。</li>
<li>該color字段指定三種不同肌肉狀態下球體的顏色：空閒（項目0），收縮（項目1）和放鬆（項目2）。顯示的顏色是通過將閒置顏色和當前狀態顏色與百分比（取決於電動機施加的力）混合而成的：</li>
</ul>
<p>o    color = idle_color * (1 - percentage) + other_color * percentage</p>
<p>在哪裡other_color收縮或放鬆色彩。僅使用三種顏色，因此，如果指定了更多項目，則將忽略它們。如果僅定義了兩種顏色，則當肌肉收縮或鬆弛時，將使用相同的顏色（項目1）。如果僅定義一種顏色，則將指定的顏色用於所有肌肉狀態。如果color字段為空，則所有肌肉狀態均使用默認顏色（純紅色）。</p>
<ul>
<li>該castShadows字段使用戶可以打開（TRUE）或關閉（FALSE）由肌肉球體網格投射的陰影。</li>
<li>該visible字段用於顯示（TRUE）或隱藏（FALSE）3D場景中的肌肉。</li>
</ul>
<p>  </p>
<p><em><strong>鋼筆</strong></em></p>
<p>源自<a href="https://cyberbotics.com/doc/reference/device"><span>設備</span></a>和<a href="https://cyberbotics.com/doc/reference/solid"><span>實體</span></a>。</p>
<p>Pen {  SFColor inkColor    0 0 0   # any color  SFFloat inkDensity  0.5     # [0, 1]  SFFloat leadSize    0.002   # [0, inf)  SFFloat maxDistance 0.0     # [0, inf)  SFBool  write       TRUE    # {TRUE, FALSE}}</p>
<p><em><strong>指數</strong></em></p>
<ul>
<li><a href="https://cyberbotics.com/doc/reference/pen#description"><span>描述</span></a></li>
<li><a href="https://cyberbotics.com/doc/reference/pen#field-summary"><span>領域摘要</span></a></li>
<li><a href="https://cyberbotics.com/doc/reference/pen#pen-functions"><span>筆功能</span></a>
<ul>
<li><a href="https://cyberbotics.com/doc/reference/pen#wb_pen_write">wb_pen_write</a></li>
<li><a href="https://cyberbotics.com/doc/reference/pen#wb_pen_set_ink_color">wb_pen_set_ink_color</a></li>
</ul>
</li>
</ul>
<p><em><strong>描述</strong></em></p>
<p><a href="https://cyberbotics.com/doc/reference/pen#pen">Pen</a>節點對連接到移動機器人的<a href="https://cyberbotics.com/doc/reference/pen#pen"><span>筆進行</span></a>建模，該筆通常用於顯示機器人的軌跡。<a href="https://cyberbotics.com/doc/reference/solid">Pen</a>設備的繪製方向與節點的<em>-y-</em>軸重合。因此，可以通過修改<a href="https://cyberbotics.com/doc/reference/solid"><span>實體</span></a>節點的旋轉和平移字段來對其進行調整。通過設置該maxDistance字段，可以定義<a href="https://cyberbotics.com/doc/reference/pen#pen"><span>筆</span></a>的範圍並僅在靠近設備的物體上繪畫。例如，使用較小的值maxDistance可以模擬僅在物理接觸時書寫的筆或鉛筆的真實行為。如果maxDistance設置為0（默認值），則範圍將不受限制。</p>
<p>為了可繪製，對象應該由一個<a href="https://cyberbotics.com/doc/reference/solid"><span>實體</span></a>節點組成，該<a href="https://cyberbotics.com/doc/reference/solid"><span>實體</span></a>節點包含一個帶有有效值的<a href="https://cyberbotics.com/doc/reference/shape">Shape</a>Geometry和一個<a href="https://cyberbotics.com/doc/reference/imagetexture">ImageTexture</a>。將已塗漆的圖層應用到紋理上，而無需對其進行修改。</p>
<p>繪製動作的精度主要取決於節點的subdivision場Geometry。較高的subdivision值會增加用於表示幾何圖形的多邊形的數量，因此可以進行更精確的紋理映射，但是也會降低場景的渲染速度。另一方面，如果紋理貼圖較差，則塗漆區域可能會顯示在與預期位置不同的位置。對於<a href="https://cyberbotics.com/doc/reference/indexedfaceset">IndexedFaceSet</a>，可以通過定義紋理映射並設置texCoord和texCoordIndex字段來提高精度。實際上，如果沒有給出紋理映射或給出無效的紋理映射，則係統將使用默認的常規映射。</p>
<p>“ pen.wbt”示例環境（位於Webots的“ projects / samples / devices / worlds”目錄中）提供了與配備筆的機器人一起使用的帶紋理的地板的示例。</p>
<p><strong>注意</strong>：<a href="https://cyberbotics.com/doc/reference/worldinfo">WorldInfo</a>節點的inkEvaporation字段控制墨水蒸發的速度（消失）。</p>
<p><strong>注意</strong>：可以通過紅外距離傳感器看到用鋼筆繪製的圖形。因此，可以實現機器人實驗，其中機器人用筆在地板上畫線，第二機器人用第一機器人畫的線進行跟隨行為。</p>
<p><em><strong>領域摘要</strong></em></p>
<ul>
<li>inkColor：定義筆墨水的顏色。可以使用此wb_pen_set_ink_color功能從pen API更改此字段。</li>
<li>inkDensity：定義墨水顏色的密度。該值應在[0,1]範圍內。也可以使用wb_pen_set_ink_color函數從pen API更改此字段。</li>
<li>leadSize：定義筆的“筆尖”的寬度。這允許機器人編寫更寬或更窄的軌道。</li>
<li>maxDistance：定義<a href="https://cyberbotics.com/doc/reference/pen#pen">Pen</a>設備與可繪畫對象之間的最大距離，並允許模擬接觸式書寫行為。小於或等於0的值表示無限的繪畫範圍。</li>
<li>write：此佈爾值字段允許機器人啟用或禁用用筆書寫。也可以使用wb_pen_write功能從pen API進行切換。</li>
</ul>
<p></p>
<p><em><strong>筆功能</strong></em></p>
<p><strong>wb_pen_write</strong></p>
<p>CC ++蟒蛇爪哇的MATLABROS</p>
<p><span><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;">#</span><span><span style="font-style: inherit; font-weight: inherit;"><strong><span style="font-style: inherit;">include</span></strong></span></span></span><span><span> </span><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;">&lt;webots/pen.h&gt;</span></span></span></span></span> <span><span style="font-style: inherit;"><strong><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit;">void</span></span></span></strong></span></span><span style="font-style: inherit; font-weight: inherit;"><span> </span><strong><span style="font-style: inherit;"><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit;">wb_pen_write</span></span></span></strong></span><span style="font-style: inherit; font-weight: inherit;"><span><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;">(WbDeviceTag tag,<span> </span></span></span></span><span style="font-style: inherit;"><span><span style="font-style: inherit; font-weight: inherit;"><strong><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit;">bool</span></span></strong></span></span></span><span><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;"><span> </span>write)</span></span></span></span>;</p>
<p><em><strong>描述</strong></em></p>
<p><em>啟用或禁用筆書寫</em></p>
<p>該wb_pen_write功能允許用戶打開或關閉筆設備以禁用或啟用書寫。如果該write參數為<em>true</em>，則指定的tag設備將寫入；否則為0。如果write為<em>false</em>，則不會。</p>
<p><strong>wb_pen_set_ink_color</strong></p>
<p>CC ++蟒蛇爪哇的MATLABROS</p>
<p><span><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;">#</span><span><span style="font-style: inherit; font-weight: inherit;"><strong><span style="font-style: inherit;">include</span></strong></span></span></span><span><span> </span><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;">&lt;webots/pen.h&gt;</span></span></span></span></span> <span><span style="font-style: inherit;"><strong><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit;">void</span></span></span></strong></span></span><span style="font-style: inherit; font-weight: inherit;"><span> </span><strong><span style="font-style: inherit;"><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit;">wb_pen_set_ink_color</span></span></span></strong></span><span style="font-style: inherit; font-weight: inherit;"><span><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;">(WbDeviceTag tag,<span> </span></span></span></span><span style="font-style: inherit;"><span><span style="font-style: inherit; font-weight: inherit;"><strong><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit;">int</span></span></strong></span></span></span><span><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;"><span> </span>color,<span> </span></span></span></span><span style="font-style: inherit;"><span><span style="font-style: inherit; font-weight: inherit;"><strong><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit;">double</span></span></strong></span></span></span><span><span style="font-style: inherit; font-weight: inherit;"><span style="font-style: inherit; font-weight: inherit;"><span> </span>density)</span></span></span></span>;</p>
<p><em><strong>描述</strong></em></p>
<p><em>改變筆墨水的顏色</em></p>
<p>該wb_pen_set_ink_color功能更改指定tag設備的當前墨水顏色。的color是32位整數值，其限定在為0xRRGGBB十六進制格式（即油墨的新的顏色，0x000000處為黑色，0xFF0000為紅色，0x00FF00為綠色，0x0000FF是藍色的，0xFFA500是橙色，0x808080是灰色0XFFFFFF是白色的，等等。）。該density參數定義墨水密度，0表示透明墨水，1表示完全不透明的墨水。</p>
<p><em><strong>例</strong></em></p>
<p>wb_pen_set_ink_color(pen,<span>0xF01010</span>,<span>0.9</span>);</p>
<p>上面的陳述會將指示筆的墨水顏色更改為某种红色。</p>
<p><strong>注意</strong> [MATLAB]：在wb_pen_set_ink_color函數的MATLAB版本中，color參數必須是包含三個RGB分量的向量[RED GREEN BLUE]。每個組件的值必須在0.0到1.0之間。例如，矢量[1 0 1]代表洋紅色。</p>
<p></p>
<h3><em><strong>W5心得</strong></em></h3>
<p>翻譯的東西越多 越覺得webots這個軟體鰻厲害的 以及了解到還有很多東西是我不懂的  希望在接下來的日子 我可以學會更多裡面的內容以及提升自我的英文程度到可以不用在使用google翻譯。</p>
<p></p>